from enum import Enum
from plum import dispatch
from typing import TypeVar,Union,Generic,List,Tuple
from spire.xls.common import *
from spire.xls import *
from ctypes import *
import abc

class ChartValueAxis (  XlsChartValueAxis) :
    """

    """
    @property

    def Font(self)->'ExcelFont':
        """
    <summary>
        Returns font used for axis text displaying. Read-only.
    </summary>
        """
        GetDllLibXls().ChartValueAxis_get_Font.argtypes=[c_void_p]
        GetDllLibXls().ChartValueAxis_get_Font.restype=c_void_p
        intPtr = CallCFunction(GetDllLibXls().ChartValueAxis_get_Font, self.Ptr)
        ret = None if intPtr==None else ExcelFont(intPtr)
        return ret


    @property

    def MajorGridLines(self)->'ChartGridLine':
        """
    <summary>
        Returns major gridLines. Read-only.
    </summary>
        """
        GetDllLibXls().ChartValueAxis_get_MajorGridLines.argtypes=[c_void_p]
        GetDllLibXls().ChartValueAxis_get_MajorGridLines.restype=c_void_p
        intPtr = CallCFunction(GetDllLibXls().ChartValueAxis_get_MajorGridLines, self.Ptr)
        ret = None if intPtr==None else ChartGridLine(intPtr)
        return ret


    @property

    def MinorGridLines(self)->'ChartGridLine':
        """
    <summary>
        Returns minor gridLines. Read-only.
    </summary>
        """
        GetDllLibXls().ChartValueAxis_get_MinorGridLines.argtypes=[c_void_p]
        GetDllLibXls().ChartValueAxis_get_MinorGridLines.restype=c_void_p
        intPtr = CallCFunction(GetDllLibXls().ChartValueAxis_get_MinorGridLines, self.Ptr)
        ret = None if intPtr==None else ChartGridLine(intPtr)
        return ret


    @property

    def TitleArea(self)->'ChartTextArea':
        """
    <summary>
        Returns text area for the axis title. Read-only.
    </summary>
        """
        GetDllLibXls().ChartValueAxis_get_TitleArea.argtypes=[c_void_p]
        GetDllLibXls().ChartValueAxis_get_TitleArea.restype=c_void_p
        intPtr = CallCFunction(GetDllLibXls().ChartValueAxis_get_TitleArea, self.Ptr)
        ret = None if intPtr==None else ChartTextArea(intPtr)
        return ret


    @staticmethod
    def DefaultValueAxisId()->int:
        """

        """
        #GetDllLibXls().ChartValueAxis_DefaultValueAxisId.argtypes=[]
        GetDllLibXls().ChartValueAxis_DefaultValueAxisId.restype=c_int
        ret = CallCFunction(GetDllLibXls().ChartValueAxis_DefaultValueAxisId)
        return ret

    @staticmethod
    def DefaultSecondaryValueAxisId()->int:
        """

        """
        #GetDllLibXls().ChartValueAxis_DefaultSecondaryValueAxisId.argtypes=[]
        GetDllLibXls().ChartValueAxis_DefaultSecondaryValueAxisId.restype=c_int
        ret = CallCFunction(GetDllLibXls().ChartValueAxis_DefaultSecondaryValueAxisId)
        return ret

