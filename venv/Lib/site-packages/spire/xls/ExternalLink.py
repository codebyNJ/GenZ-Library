from enum import Enum
from plum import dispatch
from typing import TypeVar,Union,Generic,List,Tuple
from spire.xls.common import *
from spire.xls import *
from ctypes import *
import abc

class ExternalLink (  XlsObject) :
    """

    """
    @property

    def DataSource(self)->str:
        """

        """
        GetDllLibXls().ExternalLink_get_DataSource.argtypes=[c_void_p]
        GetDllLibXls().ExternalLink_get_DataSource.restype=c_void_p
        ret = PtrToStr(CallCFunction(GetDllLibXls().ExternalLink_get_DataSource, self.Ptr))
        return ret


    @DataSource.setter
    def DataSource(self, value:str):
        GetDllLibXls().ExternalLink_set_DataSource.argtypes=[c_void_p, c_wchar_p]
        CallCFunction(GetDllLibXls().ExternalLink_set_DataSource, self.Ptr, value)

    @property
    def IsReferred(self)->bool:
        """

        """
        GetDllLibXls().ExternalLink_get_IsReferred.argtypes=[c_void_p]
        GetDllLibXls().ExternalLink_get_IsReferred.restype=c_bool
        ret = CallCFunction(GetDllLibXls().ExternalLink_get_IsReferred, self.Ptr)
        return ret

    @property
    def IsVisible(self)->bool:
        """

        """
        GetDllLibXls().ExternalLink_get_IsVisible.argtypes=[c_void_p]
        GetDllLibXls().ExternalLink_get_IsVisible.restype=c_bool
        ret = CallCFunction(GetDllLibXls().ExternalLink_get_IsVisible, self.Ptr)
        return ret


    def AddExternalName(self ,text:str,referTo:str):
        """

        """
        
        GetDllLibXls().ExternalLink_AddExternalName.argtypes=[c_void_p ,c_void_p,c_void_p]
        CallCFunction(GetDllLibXls().ExternalLink_AddExternalName, self.Ptr, text,referTo)

